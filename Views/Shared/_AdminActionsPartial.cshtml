@using Microsoft.AspNetCore.Identity
@using Alquileres.Models
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager

@if (signInManager.IsSignedIn(User))
{
    var currentUser = await userManager.GetUserAsync(User);
    var isAdmin = currentUser != null && await userManager.IsInRoleAsync(currentUser, AppConstants.AdministratorRole);

    if (isAdmin)
    {
        <!-- Versión móvil (sin dropdown) -->
        <div class="d-block d-lg-none">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-controller="TbAuditorias" asp-action="Index">
                        <i class="fas fa-clipboard-list me-2"></i> Auditoría
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-controller="AdministrarPermisos" asp-action="Index">
                        <i class="fas fa-user-shield me-2"></i> Permisos
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-controller="Empresa" asp-action="Index">
                        <i class="fas fa-building me-2"></i> Datos Empresa
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-controller="TbUsuarios" asp-action="Index">
                        <i class="fas fa-plus me-2"></i> Crear Usuarios
                    </a>
                </li>
            </ul>
        </div>

        <!-- Versión escritorio (con dropdown solo hover) -->
        <li class="nav-item dropdown d-none d-lg-block">
            <a class="nav-link dropdown-toggle text-dark admin-dropdown-toggle" href="#" id="adminDropdown" role="button"
                onmouseenter="showDropdown(this)" onmouseleave="hideDropdown(this, 200)">
                <i class="fas fa-cog me-1"></i> Administración
            </a>
            <ul class="dropdown-menu admin-dropdown-menu dropdown-menu-end" aria-labelledby="adminDropdown"
                onmouseenter="clearHideTimeout()" onmouseleave="scheduleHide(this, 200)">
                <li>
                    <a class="dropdown-item" asp-controller="TbAuditorias" asp-action="Index">
                        <i class="fas fa-clipboard-list me-2"></i> Auditoría
                    </a>
                </li>
                <li>
                    <a class="dropdown-item" asp-controller="AdministrarPermisos" asp-action="Index">
                        <i class="fas fa-user-shield me-2"></i> Permisos
                    </a>
                </li>
                <li>
                    <a class="dropdown-item" asp-controller="Empresa" asp-action="Index">
                        <i class="fas fa-building me-2"></i> Datos Empresa
                    </a>
                </li>
                <li>
                    <a class="dropdown-item" asp-controller="TbUsuarios" asp-action="Index">
                        <i class="fas fa-plus me-2"></i> Crear Usuarios
                    </a>
                </li>
                @* <li>
                    <hr class="dropdown-divider">
                </li>
                <li>
                    <a class="dropdown-item" href="#">
                        <i class="fas fa-cogs me-2"></i> Más opciones...
                    </a>
                </li> *@
            </ul>
        </li>

        <style>
            /* Cambiar selectores para que solo afecten al dropdown de admin */
            #adminDropdown+.dropdown-menu {
                min-width: 250px;
                border: none;
                box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
                border-radius: 8px;
                padding: 10px 0;
                transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
                opacity: 0;
                display: block;
                visibility: hidden;
                transform: translateY(10px);
                pointer-events: none;
                position: absolute;
                z-index: 1000;
                background-color: white;
            }

            #adminDropdown+.dropdown-menu.show {
                opacity: 1;
                visibility: visible;
                transform: translateY(0);
                pointer-events: auto;
            }

            #adminDropdown+.dropdown-menu .dropdown-item {
                padding: 8px 20px;
                border-radius: 4px;
                margin: 2px 10px;
                transition: all 0.2s ease;
                color: #333;
            }

            #adminDropdown+.dropdown-menu .dropdown-item:hover {
                background-color: #f8f9fa;
                color: #0d6efd;
                transform: translateX(5px);
            }

            #adminDropdown.dropdown-toggle::after {
                transition: transform 0.2s ease;
                display: inline-block;
                margin-left: 0.255em;
                vertical-align: 0.255em;
                content: "";
                border-top: 0.3em solid;
                border-right: 0.3em solid transparent;
                border-bottom: 0;
                border-left: 0.3em solid transparent;
            }

            #adminDropdown.show.dropdown-toggle::after {
                transform: rotate(180deg);
            }
        </style>

        <script>
            // Variables para controlar el timeout
            let hideTimeout;

            function showDropdown(element) {
                const dropdown = element.nextElementSibling;
                clearTimeout(hideTimeout);
                dropdown.style.display = 'block';
                setTimeout(() => {
                    dropdown.classList.add('show');
                    element.classList.add('show');
                }, 10);
            }

            function hideDropdown(element, delay) {
                const dropdown = element.nextElementSibling;
                hideTimeout = setTimeout(() => {
                    if (!dropdown.matches(':hover')) {
                        closeDropdown(dropdown, element);
                    }
                }, delay);
            }

            function clearHideTimeout() {
                clearTimeout(hideTimeout);
            }

            function scheduleHide(dropdown, delay) {
                hideTimeout = setTimeout(() => {
                    closeDropdown(dropdown, dropdown.previousElementSibling);
                }, delay);
            }

            function closeDropdown(dropdown, toggle) {
                dropdown.classList.remove('show');
                toggle.classList.remove('show');

                setTimeout(() => {
                    if (!dropdown.classList.contains('show')) {
                        dropdown.style.display = 'none';
                    }
                }, 300);
            }

            // Deshabilitar clics en el toggle
            document.querySelectorAll('.dropdown-toggle').forEach(toggle => {
                toggle.addEventListener('click', function (e) {
                    e.preventDefault();
                });
            });
        </script>
    }
}