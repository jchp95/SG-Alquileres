<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Alquileres</title>
    <script type="importmap"></script>

    <!-- Estilos CSS -->
    <link href="~/lib/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/lib/font-awesome/css/all.min.css" />

    <!-- DataTables: Usar solo una versión (min.css) -->
    <link href="~/lib/datatables.net-bs5/datatables.bootstrap5.min.css" rel="stylesheet" />

    <link rel="stylesheet" href="https://cdn.datatables.net/datetime/1.5.5/css/dataTables.dateTime.min.css">

    <!-- Select2 CSS -->
    <link rel="stylesheet" href="~/lib/select2/css/select2.min.css" />

    <!-- SweetAlert2: Usar solo la versión minificada -->
    <link href="~/lib/sweetalert2/sweetalert2.min.css" rel="stylesheet" />

    <!-- Toasts -->
    <link href="~/lib/toastr.js/toastr.min.css" rel="stylesheet" />

    <!-- Intro -->
    <link href="~/lib/intro.js/introjs.min.css" rel="stylesheet" />

    <!-- Leaflet.js mapa-->
    <link href="~/lib/leaflet/leaflet.min.css" rel="stylesheet" />

    <!-- Estilos personalizados -->
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Alquileres.styles.css" asp-append-version="true" />


    @await RenderSectionAsync("Styles", required: false)
</head>

<body>
    @* Obtener la cantidad de cuotas vencidas desde ViewData *@
    @{
        int cantidadCuotasVencidas = ViewData["CantidadCuotasVencidas"] != null
        ? (int)ViewData["CantidadCuotasVencidas"]
        : 0;

        var cuotasVencidas = ViewData["CuotasVencidas"] as List<TbCxcCuotum>;
    }

    <header class="div1">
        <nav class="navbar navbar-expand-sm navbar-light bg-white shadow">
            <div class="container-fluid justify-content-between align-items-center">

                <!-- Grupo izquierdo (icono, logo, nombre) -->
                <div class="d-flex align-items-center">
                    <!-- Botón sidebar (solo móvil) -->
                    <button class="sidebar-toggler btn me-2 d-sm-none" type="button" id="toggleSidebarMobile">
                        <i class="fas fa-indent"></i>
                    </button>

                    <!-- Logo + Nombre empresa -->
                    <a class="navbar-brand d-flex align-items-center gap-2" asp-area="" asp-controller="Home"
                        asp-action="Index">
                        <img id="logoEmpresa" src="@Url.Action("GetLogo", "Empresa")" alt="LOGO" class="logo-navbar"
                            style="height: 60px; width: auto;"
                            onerror="this.style.display='none'; document.getElementById('altLogo').style.display='inline';" />

                        <span id="altLogo" class="fw-bold text-dark" style="display: none;">LOGO</span>
                        <span class="fw-bold text-dark">@ViewData["NombreEmpresa"]</span>
                    </a>
                </div>

                <!-- Grupo derecho (campana móvil + toggler general + login) -->
                <div class="d-flex align-items-center">

                    <!-- Campana SOLO en móvil -->
                    <div class="dropdown d-sm-none me-2">
                        <a class="nav-link text-dark position-relative" href="#" id="notificationsBellMobile"
                            role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="fas fa-bell fs-5"></i>
                            @if (cantidadCuotasVencidas > 0)
                            {
                                <span
                                    class="badge position-absolute top-0 start-100 translate-middle p-1 bg-danger rounded-circle">
                                    @cantidadCuotasVencidas
                                </span>
                            }
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="notificationsBellMobile"
                            id="notificationsDropdownMobile">
                            <li><a class="dropdown-item" href="#">Cargando notificaciones...</a></li>
                        </ul>
                    </div>

                    <!-- Toggler menú general -->
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                        data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent" aria-expanded="false"
                        aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                </div>

                <!-- Collapse para menú -->
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                            </li>
                        }

                    </ul>
                    <ul class="navbar-nav ms-auto">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <!-- Campana en escritorio -->
                            <li class="nav-item d-none d-sm-block">
                                <div class="dropdown dropstart" data-toggle="tooltip" data-html="true"
                                    data-placement="bottom" title="Notificaciones" data-bs-toggle="dropdown">
                                    <a class="nav-link text-dark" href="#" id="notificationsBell" role="button"
                                        aria-expanded="false">
                                        <i class="fas fa-bell"></i>
                                        @if (cantidadCuotasVencidas > 0)
                                        {
                                            <span class="badge badge-pulse bg-danger">@cantidadCuotasVencidas</span>
                                        }
                                        else
                                        {
                                            <span class="badge badge-pulse bg-danger d-none">0</span>
                                        }
                                    </a>
                                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="notificationsBell"
                                        id="notificationsDropdown">
                                        <li><a class="dropdown-item" href="#">Cargando notificaciones...</a></li>
                                    </ul>
                                </div>
                            </li>

                            @await Html.PartialAsync("_AdminActionsPartial")

                        }

                        <!-- Login -->
                        @await Html.PartialAsync("_LoginPartial")

                    </ul>
                </div>
            </div>
        </nav>
    </header>


    <div class="parent">
        @if (User.Identity.IsAuthenticated)
        {
            @await Html.PartialAsync("_SidebarPartial")
        }

        <!-- Main Content -->
        <div class="div4"
            style="background-image: linear-gradient(rgba(255, 255, 255, 0.8), rgba(255, 255, 255, 0.8)), url('@Url.Action("GetFondo", "Empresa")');">
            <main role="main" class="my-3">
                @RenderBody()
            </main>
        </div>
    </div>


    <!-- Footer -->
    <footer class="div3 mt-10 border-top footer text-muted">
        <div class="container">
            &copy; 2025 - Alquileres
        </div>
    </footer>

    <!-- jQuery y plugins generales -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>

    <!-- InputMask -->
    <script src="~/lib/inputmask/jquery.inputmask.bundle.min.js"></script>

    <!-- Bootstrap y dependencias -->
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Axios -->
    <script src="~/lib/axios/axios.min.js"></script>

    <!-- Select2 -->
    <script src="~/lib/select2/js/select2.min.js"></script>

    <!-- jQuery Validation -->
    <script src="~/lib/jquery-validate/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/lib/jquery-validate/additional-methods.min.js"></script>

    <!-- Inputmask -->
    <script src="~/lib/inputmask/inputmask/inputmask.min.js"></script>

    <!-- Moment.js (necesario para DateTime plugin de DataTables) -->
    <script src="~/lib/moment.js/moment.min.js"></script>


    <!-- DataTables núcleo y bootstrap -->
    <script src="~/lib/datatables.net/datatables.min.js"></script>
    <script src="~/lib/datatables.net-bs5/dataTables.bootstrap5.min.js"></script>

    <!-- DataTables plugins -->
    <script src="~/lib/datatables-responsive/datatables.responsive.min.js"></script>
    <script src="https://cdn.datatables.net/datetime/1.5.5/js/dataTables.dateTime.min.js"></script>

    <!-- DataTables Buttons: ORDEN CORRECTO -->
    <script src="~/lib/datatables.net-buttons/js/datatables.buttons.min.js"></script>
    <script src="~/lib/jszip/jszip.min.js"></script>
    <script src="~/lib/pdfmake/pdfmake.min.js"></script>
    <script src="~/lib/pdfmake/vfs_fonts.js"></script>
    <script src="~/lib/datatables.net-buttons/js/buttons.html5.min.js"></script>
    <script src="~/lib/datatables.net-buttons/js/buttons.print.min.js"></script>


    <!-- leaflet -->
    <script src="~/lib/leaflet/leaflet.js"></script>

    <!-- Plugins adicionales DataTables -->
    <script src="~/lib/datatables-plugins/buttons/button.download.min.js"></script>
    <script src="~/lib/datatables-plugins/i18n/es-es.js"></script>
    <script src="~/lib/datatables-plugins/i18n/es-es.min.js"></script>

    <!-- Font Awesome -->
    <script src="~/lib/font-awesome/js/all.min.js"></script>

    <!-- SweetAlert2 -->
    <script src="~/lib/sweetalert2/sweetalert2.min.js"></script>

    <!-- Toasts -->
    <script src="~/lib/toastr.js/toastr.min.js"></script>

    <script src="~/lib/intro.js/intro.min.js"></script>

    <!-- Scripts personalizados -->
    <script src="~/js/site.js"></script>



    <!-- Audio para notificaciones -->
    <audio id="notificationSound" src="~/sounds/notificacion.mp3" preload="auto"></audio>

    <script>
        // Alternar sidebar con animación
        document.getElementById('toggleSidebar').addEventListener('click', function (event) {
            event.preventDefault();
            event.stopPropagation();

            const sidebar = document.getElementById('sidebar');
            sidebar.classList.toggle('collapsed');

            // Agregar clase de animación
            sidebar.classList.add('animating');
            setTimeout(() => sidebar.classList.remove('animating'), 300);
        });

        document.getElementById('toggleSidebarMobile').addEventListener('click', function (event) {
            event.preventDefault();

            const sidebar = document.getElementById('sidebar');

            // Abrir sidebar
            sidebar.classList.remove('collapsed');
            sidebar.classList.add('expanded', 'mobile-sidebar');
            document.body.classList.add('sidebar-open');

            // Detectar clic fuera para cerrar
            const closeSidebarOnClickOutside = function (e) {
                const toggleBtn = document.getElementById('toggleSidebarMobile');
                if (!sidebar.contains(e.target) && e.target !== toggleBtn && !toggleBtn.contains(e.target)) {
                    sidebar.classList.remove('expanded');
                    sidebar.classList.add('collapsed');

                    // Esperar a que termine la transición para limpiar clases
                    setTimeout(() => {
                        sidebar.classList.remove('mobile-sidebar');
                        document.body.classList.remove('sidebar-open');
                    }, 300); // duración igual al transition: 0.3s

                    document.removeEventListener('click', closeSidebarOnClickOutside);
                }
            };

            document.addEventListener('click', closeSidebarOnClickOutside);
        });


        // Cerrar sidebar al hacer clic fuera
        document.addEventListener('click', function (event) {
            const sidebar = document.getElementById('sidebar');
            const toggleButton = document.getElementById('toggleSidebar');

            if (!sidebar.contains(event.target) && !toggleButton.contains(event.target) && !sidebar.classList.contains('collapsed')) {
                sidebar.classList.add('collapsed');
                sidebar.classList.add('animating');
                setTimeout(() => sidebar.classList.remove('animating'), 300);
            }
        });

        function toggleSubMenu(event, subMenuId) {
            event.preventDefault();
            event.stopPropagation();

            const subMenu = document.getElementById(subMenuId);
            const arrow = event.currentTarget.querySelector('.fa-chevron-down');
            const dot = event.currentTarget.querySelector('.active-dot');
            const wasOpen = subMenu.classList.contains('show');

            // Cerrar todos los submenús y ocultar sus puntos
            document.querySelectorAll('.list-group-flush.show').forEach(menu => {
                if (menu.id !== subMenuId) {
                    menu.classList.remove('show');
                    const otherArrow = menu.previousElementSibling.querySelector('.fa-chevron-down');
                    const otherDot = menu.previousElementSibling.querySelector('.active-dot');
                    otherArrow.classList.remove('fa-rotate-180');
                    if (otherDot) otherDot.classList.remove('visible');
                }
            });

            // Ocultar todos los puntos excepto el actual (opcional, para mayor seguridad)
            document.querySelectorAll('.active-dot.visible').forEach(d => {
                if (d !== dot) d.classList.remove('visible');
            });

            // Alternar el submenú actual
            if (wasOpen) {
                subMenu.classList.remove('show');
                arrow.classList.remove('fa-rotate-180');
                if (dot) dot.classList.remove('visible');
            } else {
                subMenu.classList.add('show');
                arrow.classList.add('fa-rotate-180');
                if (dot) dot.classList.add('visible');

                subMenu.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
            }

            return false;
        }

        // Mejorar accesibilidad con teclado
        document.querySelectorAll('.nav-link[data-mdb-collapse-init]').forEach(link => {
            link.addEventListener('keydown', (e) => {
                if (e.key === 'Enter' || e.key === ' ') {
                    e.preventDefault();
                    const subMenuId = link.getAttribute('href').substring(1);
                    toggleSubMenu(e, subMenuId);
                }
            });
        });
    </script>

    <script>
        $(function () {
            $('[data-toggle="tooltip"]').tooltip({
                trigger: 'hover',
                boundary: 'window'
            });
        });
    </script>

    <script>
        // Función para cargar notificaciones
        function cargarNotificaciones() {
            $.get('/Home/CheckCuotasVencidas', function (data) {
                console.log(data);

                // Elementos escritorio
                const dropdownDesktop = $('#notificationsDropdown');
                const badgeDesktop = $('#notificationBadge');

                // Elementos móvil
                const dropdownMobile = $('#notificationsDropdownMobile');
                const badgeMobile = $('#notificationBadgeMobile');

                // Limpiar ambos dropdowns
                dropdownDesktop.empty();
                dropdownMobile.empty();

                if (data.tieneCuotasVencidas) {
                    // Mostrar y actualizar ambos badges
                    badgeDesktop.text(data.cantidad).removeClass('d-none');
                    badgeMobile.text(data.cantidad).removeClass('d-none');

                    const header = `<li><h6 class="dropdown-header">Tienes ${data.cantidad} cuota(s) vencida(s)</h6></li>`;

                    dropdownDesktop.append(header);
                    dropdownMobile.append(header);

                    data.cuotas.forEach(function (cuota) {
                        const fecha = new Date(cuota.fvence).toLocaleDateString();
                        const item = `
                    <li>
                        <a class="dropdown-item" href="#">
                            Cuota #${cuota.fNumeroCuota} - $${cuota.fmonto.toFixed(2)}
                            <span class="text-danger">Vencido: ${fecha}</span>
                        </a>
                    </li>`;

                        dropdownDesktop.append(item);
                        dropdownMobile.append(item);
                    });

                    const divider = `<li><hr class="dropdown-divider"></li>`;
                    const verTodas = `<li><a class="dropdown-item text-center" href="/TbCuotas/Index">Ver todas</a></li>`;

                    dropdownDesktop.append(divider + verTodas);
                    dropdownMobile.append(divider + verTodas);

                } else {
                    // Ocultar ambos badges
                    badgeDesktop.addClass('d-none');
                    badgeMobile.addClass('d-none');

                    const sinCuotas = `<li><a class="dropdown-item" href="#">No tienes cuotas vencidas</a></li>`;
                    dropdownDesktop.append(sinCuotas);
                    dropdownMobile.append(sinCuotas);
                }
            }).fail(function (jqXHR, textStatus, errorThrown) {
                console.error("Error al cargar notificaciones:", textStatus, errorThrown);

                const errorItem = `<li><a class="dropdown-item text-danger" href="#">Error al cargar notificaciones</a></li>`;
                $('#notificationsDropdown').empty().append(errorItem);
                $('#notificationsDropdownMobile').empty().append(errorItem);
            });
        }

        // Cargar notificaciones al cargar la página
        $(document).ready(function () {
            cargarNotificaciones();

            // Opcional: Actualizar cada 5 minutos
            setInterval(cargarNotificaciones, 300000);
        });

        // Actualizar al hacer clic en la campana
        $('#notificationsBell').click(cargarNotificaciones);
        $('#notificationsBellMobile').click(cargarNotificaciones);
    </script>

    <script>
        toastr.options = {
            "closeButton": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "timeOut": "5000"
        };
    </script>


    @await RenderSectionAsync("Scripts", required: false)
</body>

</html>